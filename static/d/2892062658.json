{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"employer_name":"FoxGuard Solutions","employer_location":"Christiansburg, VA","employment_start":"2014-11-01T04:00Z","employment_end":null,"job_title_final":"Software Engineer II"},"html":"<ul>\n<li>Designed, built, and maintained 20+ disparate continuous delivery pipelines, captured as code using Jenkins Job DSL, coordinated with GitHub, and gated by mandatory peer code reviews.</li>\n<li>Built and deployed web applications, backend applications, and scripts for a variety of target execution platforms including IIS / ASP.NET, ASP.NET Core, Node.js, Python, PowerShell, Docker, AWS Elastic Beanstalk, AWS Elastic Container Service, and AWS Lambda.</li>\n<li>Migrated bespoke-deployed IIS web applications on self-managed VMs at Rackspace to immutable infrastructure at AWS, using Terraform and PowerShell. Reduced hosting costs by a factor of 2, sped up production deployment times by a factor of 5.</li>\n<li>Empowered team to safely iterate on our cloud infrastructure by capturing it's definition as code and rigorously integrating its management with our continuous delivery processes and systems.</li>\n<li>Upgraded large ASP.NET MVC 5 application to ASP.NET Core 2.2. Increased performance and decreased maintenance overhead, ensuring application longevity.</li>\n<li>Functioned as team's subject-matter expert for C#, ASP.NET MVC, Entity Framework, T-SQL, TypeScript / JavaScript, and Terraform.</li>\n<li>Served as detail-oriented mentor for colleagues in code cleanliness, object-oriented design, test-driven development, dependency injection, performance tuning, normalized database design, HATEOAS API design, continuous delivery, tech debt trade-off decision-making, and Agile software development lifecycle management.</li>\n<li>Led recurring book clubs and lunch-and-learns for professional development.</li>\n</ul>"}},{"node":{"frontmatter":{"employer_name":"NetVentures","employer_location":"Roanoke, VA","employment_start":"2013-12-01T04:00Z","employment_end":"2014-06-01T04:00Z","job_title_final":"Software Developer II"},"html":"<ul>\n<li>Implemented features and redressed deficiencies in inherited codebase for web-facing self-service portal written in ASP.NET MVC and jQuery.</li>\n<li>Iteratively stabilized, decoupled, unit tested, and rejuvenated failing project by employing refactoring best practices, dependency injection, interface-based design, and fail-fast techniques.</li>\n<li>Identified and corrected performance problems by curtailing exception rate and collapsing N+1 requests to backend RESTful API. Verified performance increase of 10x by writing and running automated UI tests.</li>\n<li>Led small development team to increase development throughput and code quality by thoroughly grooming and maintaining the backlog, performing code reviews, and managing code branch integration.</li>\n<li>Performed manual deployments of automated builds to 3 server environments.</li>\n<li>Assisted stabilization of core product by performing static analysis to identify tens of thousands of memory leaks.</li>\n<li>Performed post-mortem crash analysis using strategic logging and debugging memory dumps with WinDbg.</li>\n</ul>"}},{"node":{"frontmatter":{"employer_name":"Interactive Achievement","employer_location":"Roanoke, VA","employment_start":"2008-01-01T05:00Z","employment_end":"2013-12-01T05:00Z","job_title_final":"Software Developer II"},"html":"<ul>\n<li>Engaged in fast-paced requirements gathering, feature development, and deficiency triage in a rapidly-growing customer-focused SaaS startup.</li>\n<li>Championed application of multiple development best-practices for ASP.NET MVC applications in C#, including SOLID, dependency injection, automated testing, and static code analysis.</li>\n<li>Devised and implemented a build, test, and push-button deployment system for 18+ .NET deliverables targeting 5 hosting environments using PowerShell, MSBuild, MSDeploy, MigratorDotNet, TopShelf, and TeamCity.</li>\n<li>Designed and implemented custom high-performance image rendering pipeline responsible for delivering user-created content consistently to users across multiple client platforms.</li>\n<li>Designed and orchestrated custom cloud-based load test software to isolate &#x26; measure performance bottlenecks, using AWS, C#, and PowerShell.</li>\n<li>Applied CQRS techniques to increase throughput of performance-sensitive mission-critical APIs using MSMQ. Seamlessly integrated into pre-existing codebases using an abstraction built on .NET expression trees and reflection.</li>\n</ul>"}}]}}}